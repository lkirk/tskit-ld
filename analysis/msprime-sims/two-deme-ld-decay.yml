# In this simulation study, we're testing the behavior of LD between two
# isolated demes with varying migration rates to understand the impact of
# migration on LD over time. We will be sampling individuals every 200
# generations and computing LD decay for r^2 and sigma_D^2.

# adapted from first attempt at
# https://github.com/lkirk/tskit-ld/blob/4d4ed3/spatial-ld/analysis/docker/entrypoint

job:
  name: msprime-ld-decay
  memory: 8GB
  disk: 1GB
  cpus: &cpus 16
  entrypoint: analysis.test:main
  docker_image: ghcr.io/lkirk/tskit-ld/spatial-analysis
  classads: "(has_avx2 == true)"
params:
  out_files: !file_range
    fmt: decay_{}.parquet
    num: &n_jobs 1500
  params:
    # random_seed: !flatten [!repeat {rep: !randint_32 {seed: 23, size: 60}, n: 20}]
    sim:
      !product
      migrations: [{demes: [A, B]}]
      sample_times: !repeat {rep: !range [0, 4000, 200], n: 20}
      # a little hacky but works, each mig rate gets a seed, then product with the split sample times
      migseed:
        !zip_named
        args:
          - !randint_32 {seed: 23, size: 75}
          - !flatten [!repeat {rep: !logspace [-1, -5, 5], n: 15}]
        names: ["random_seed", "migration_rate"]
      sequence_length: [1e8]
      mutation_rate: [1e-8]
      recombination_rate: [1e-8]
      sample_size: [40]
      n_reps: [1]
      demography:
        - time_units: generations
          demes:
            - name: A
              start_time: .inf
              epochs:
                - start_size: 2000
                  end_time: 0
            - name: B
              start_time: .inf
              epochs:
                - start_size: 2000
                  end_time: 0 

    # The decay options stay the same, only simulation parameters vary
    decay:
      !product
      sample_times:
        !zip_named
        args:
          - !split {arr: !repeat {rep: 0, n: 20}, n: 20}
          - !split {arr: !range [0, 4000, 200], n: 20}
        names: ["A", "B"]
      args:
        !repeat
        rep:
          n_cpus: *cpus
          bins: !logspace [.5, 6, 41]  # bp
          chunk_size: 1
          max_dist: 1_000_000  # bp
          one_way:
            sample_groups: ["B"]
            stats: ["D2_unbiased", "pi2_unbiased", "r2", "r"]
          two_way:
            a_sample_groups: ["A", "A"]
            b_sample_groups: ["A", "B"]
            stats: ["D2_unbiased", "pi2_unbiased", "r2"]
        n: 75
